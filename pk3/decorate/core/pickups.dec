const int PICKUP_DISPLAY = 288;
const int PICKUP_PICKUP  = 289;
const int PICKUP_DROPPED = 289;

// Arguments for PICKUP_DISPLAY:
//  - arg0: Item index. Specified through Damage here.
//  - arg1: Whether the pickup's dropped or not.


// Just used for incrementing armor. Has no value on its own.
actor Pickup_OneArmor: BasicArmorBonus
{
    Armor.SavePercent   0
    Armor.SaveAmount    1
    Armor.MaxSaveAmount 0x7FFFFFFF
}

actor Class_KickedToClientside: Inventory
{
    Inventory.MaxAmount 1
    +UNDROPPABLE
}

actor ClassBasedPickup: CustomInventory
{
    +QUIET
    +AUTOACTIVATE
    +SYNCHRONIZED
    Inventory.PickupMessage ""
    Inventory.MaxAmount 0

    // Can't use either of these in the pickup states because fug u :^))))
    var int user_index;
    var int user_dropped;

    Damage 0

    States
    {
      Spawn:
        TNT1 A 0
        goto DropCheck

      DropCheck:
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(PICKUP_DROPPED) != 0, "Dropped")
        goto Display

      Dropped:
        goto Display

      Display:
        TNT1 A 35 ACS_ExecuteAlways(PICKUP_DISPLAY, 0, user_index, user_dropped)
        wait

      Unknown:
        TNT1 A -1
        stop

      PickedUp:
        // This is just here so that 'stop' actually works.
        TNT1 A 0 A_ChangeFlag("ROCKETTRAIL", 0)
        stop

      NotPickedUp:
        TNT1 A 0
        fail
    }
}

actor BaseTestPickup: ClassBasedPickup
{
    States
    {
      Clip:
        CLIP A -1
        stop

      ClipBox:
        AMMO A -1
        stop

      Shell:
        SHEL A -1
        stop

      ShellBox:
        SBOX A -1
        stop

      Rocket:
        ROCK A -1
        stop

      RocketBox:
        BROK A -1
        stop

      Cell:
        CELL A -1
        stop

      CellPack:
        CELP A -1
        stop
    }
}


actor TestClip: BaseTestPickup replaces Clip
{
    States
    {
      Spawn:
        TNT1 A 0
        TNT1 A 0 A_SetUserVar("user_index",   0)
        TNT1 A 0 A_SetUserVar("user_dropped", 0)
        goto DropCheck

      Unknown:      goto Clip
      Clipguy:      goto Clip
      Shellguy:     goto Shell
      Rocketguy:    goto Rocket
      Cellguy:      goto Cell

      Pickup:
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(PICKUP_PICKUP, 0, 0) == 1, "PickedUp")
        goto NotPickedUp
    }
}

actor TestShell: BaseTestPickup replaces Shell
{
    States
    {
      Spawn:
        TNT1 A 0
        TNT1 A 0 A_SetUserVar("user_index",   2)
        TNT1 A 0 A_SetUserVar("user_dropped", 0)
        goto DropCheck

      Unknown:      goto Shell
      Clipguy:      goto Clip
      Shellguy:     goto Shell
      Rocketguy:    goto Rocket
      Cellguy:      goto Cell

      Pickup:
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(PICKUP_PICKUP, 2, 0) == 1, "PickedUp")
        goto NotPickedUp
    }
}

actor TestRocket: BaseTestPickup replaces RocketAmmo
{
    States
    {
      Spawn:
        TNT1 A 0
        TNT1 A 0 A_SetUserVar("user_index",   4)
        TNT1 A 0 A_SetUserVar("user_dropped", 0)
        goto DropCheck

      Unknown:      goto Rocket
      Clipguy:      goto Clip
      Shellguy:     goto Shell
      Rocketguy:    goto Rocket
      Cellguy:      goto Cell

      Pickup:
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(PICKUP_PICKUP, 4, 0) == 1, "PickedUp")
        goto NotPickedUp
    }
}

actor TestCell: BaseTestPickup replaces Cell
{
    States
    {
      Spawn:
        TNT1 A 0
        TNT1 A 0 A_SetUserVar("user_index",   6)
        TNT1 A 0 A_SetUserVar("user_dropped", 0)
        goto DropCheck

      Unknown:      goto Cell
      Clipguy:      goto Clip
      Shellguy:     goto Shell
      Rocketguy:    goto Rocket
      Cellguy:      goto Cell

      Pickup:
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(PICKUP_PICKUP, 6, 0) == 1, "PickedUp")
        goto NotPickedUp
    }
}

actor TestClipBox: BaseTestPickup replaces ClipBox
{
    States
    {
      Spawn:
        TNT1 A 0
        TNT1 A 0 A_SetUserVar("user_index",   1)
        TNT1 A 0 A_SetUserVar("user_dropped", 0)
        goto DropCheck

      Unknown:      goto ClipBox
      Clipguy:      goto ClipBox
      Shellguy:     goto ShellBox
      Rocketguy:    goto RocketBox
      Cellguy:      goto CellPack

      Pickup:
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(PICKUP_PICKUP, 1, 0) == 1, "PickedUp")
        goto NotPickedUp
    }
}

actor TestShellBox: BaseTestPickup replaces ShellBox
{
    States
    {
      Spawn:
        TNT1 A 0
        TNT1 A 0 A_SetUserVar("user_index",   3)
        TNT1 A 0 A_SetUserVar("user_dropped", 0)
        goto DropCheck

      Unknown:      goto ShellBox
      Clipguy:      goto ClipBox
      Shellguy:     goto ShellBox
      Rocketguy:    goto RocketBox
      Cellguy:      goto CellPack

      Pickup:
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(PICKUP_PICKUP, 3, 0) == 1, "PickedUp")
        goto NotPickedUp
    }
}

actor TestRocketBox: BaseTestPickup replaces RocketBox
{
    States
    {
      Spawn:
        TNT1 A 0
        TNT1 A 0 A_SetUserVar("user_index",   5)
        TNT1 A 0 A_SetUserVar("user_dropped", 0)
        goto DropCheck

      Unknown:      goto RocketBox
      Clipguy:      goto ClipBox
      Shellguy:     goto ShellBox
      Rocketguy:    goto RocketBox
      Cellguy:      goto CellPack

      Pickup:
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(PICKUP_PICKUP, 5, 0) == 1, "PickedUp")
        goto NotPickedUp
    }
}

actor TestCellPack: BaseTestPickup replaces CellPack
{
    States
    {
      Spawn:
        TNT1 A 0
        TNT1 A 0 A_SetUserVar("user_index",   7)
        TNT1 A 0 A_SetUserVar("user_dropped", 0)
        goto DropCheck

      Unknown:      goto CellPack
      Clipguy:      goto ClipBox
      Shellguy:     goto ShellBox
      Rocketguy:    goto RocketBox
      Cellguy:      goto CellPack

      Pickup:
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(PICKUP_PICKUP, 7, 0) == 1, "PickedUp")
        goto NotPickedUp
    }
}


actor TestStim: ClassBasedPickup replaces Stimpack
{
    States
    {
      Spawn:
        TNT1 A 0
        TNT1 A 0 A_SetUserVar("user_index",   8)
        TNT1 A 0 A_SetUserVar("user_dropped", 0)
        goto DropCheck

      Unknown:
      Clipguy:
      Shellguy:
      Rocketguy:
      Cellguy:
        STIM A -1
        stop

      Pickup:
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(PICKUP_PICKUP, 8, 0) == 1, "PickedUp")
        goto NotPickedUp
    }
}

actor TestBonus: ClassBasedPickup replaces HealthBonus
{
    States
    {
      Spawn:
        TNT1 A 0
        TNT1 A 0 A_SetUserVar("user_index",   9)
        TNT1 A 0 A_SetUserVar("user_dropped", 0)
        goto DropCheck

      Unknown:
      Clipguy:
      Shellguy:
      Rocketguy:
      Cellguy:
        BON1 ABCDCB 6
        loop

      Pickup:
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(PICKUP_PICKUP, 9, 0) == 1, "PickedUp")
        goto NotPickedUp
    }
}

actor TestShotgun: ClassBasedPickup replaces Shotgun
{
    States
    {
      Spawn:
        TNT1 A 0
        TNT1 A 0 A_SetUserVar("user_index",   10)
        TNT1 A 0 A_SetUserVar("user_dropped", 0)
        goto DropCheck

      Unknown:
      Clipguy:
        SHOT A -1
        stop

      Shellguy:
      Rocketguy:
      Cellguy:
        SGN2 A -1
        stop

      Pickup:
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(PICKUP_PICKUP, 10, 0) == 1, "PickedUp")
        goto NotPickedUp
    }
}

actor TestGreenArmor: ClassBasedPickup replaces GreenArmor
{
    States
    {
      Spawn:
        TNT1 A 0
        TNT1 A 0 A_SetUserVar("user_index",   11)
        TNT1 A 0 A_SetUserVar("user_dropped", 0)
        goto DropCheck

      Unknown:
      Clipguy:
      Shellguy:
      Rocketguy:
      Cellguy:
        ARM1 A 6
        ARM1 B 6 bright
        loop

      Pickup:
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(PICKUP_PICKUP, 11, 0) == 1, "PickedUp")
        goto NotPickedUp
    }
}

actor TestBlueArmor: ClassBasedPickup replaces BlueArmor
{
    States
    {
      Spawn:
        TNT1 A 0
        TNT1 A 0 A_SetUserVar("user_index",   12)
        TNT1 A 0 A_SetUserVar("user_dropped", 0)
        goto DropCheck

      Unknown:
      Clipguy:
      Shellguy:
      Rocketguy:
      Cellguy:
        ARM2 A 6
        ARM2 B 6 bright
        loop

      Pickup:
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(PICKUP_PICKUP, 12, 0) == 1, "PickedUp")
        goto NotPickedUp
    }
}

actor TestArmorBonus: ClassBasedPickup replaces ArmorBonus
{
    States
    {
      Spawn:
        TNT1 A 0
        TNT1 A 0 A_SetUserVar("user_index",   13)
        TNT1 A 0 A_SetUserVar("user_dropped", 0)
        goto DropCheck

      Unknown:
      Clipguy:
      Shellguy:
      Rocketguy:
      Cellguy:
        BON2 ABCDCD 6
        loop

      Pickup:
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(PICKUP_PICKUP, 13, 0) == 1, "PickedUp")
        goto NotPickedUp
    }
}
